<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Infância Conectada</title>
    <link rel="stylesheet" href="/css/header-infancia.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: #1a1a2e;
            height: 100vh;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Container principal do jogo */
        .game-container {
            width: 1200px;
            height: 700px;
            position: relative;
            border: 3px solid #16213e;
            border-radius: 15px;
            overflow: hidden;
            background: linear-gradient(135deg, #0f3460 0%, #16213e 100%);
        }

        /* Tela de Loading */
        .loading-screen {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, #1e3c72 0%, #2a5298 100%);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .loading-logo {
            width: 200px;
            height: 200px;
            background: radial-gradient(circle, #00d4ff 0%, #0099cc 100%);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 48px;
            color: white;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            margin-bottom: 30px;
            animation: pulse 2s infinite;
        }

        .loading-bar {
            width: 300px;
            height: 8px;
            background: rgba(255,255,255,0.3);
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 20px;
        }

        .loading-progress {
            height: 100%;
            background: linear-gradient(90deg, #00d4ff 0%, #0099cc 100%);
            border-radius: 4px;
            width: 0%;
            animation: loading 3s ease-in-out forwards;
        }

        .loading-text {
            color: white;
            font-size: 18px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
        }

        /* Animação de transição - Portas */
        .door-transition {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 999;
            pointer-events: none;
        }

        .door-left, .door-right {
            position: absolute;
            top: 0;
            width: 50%;
            height: 100%;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            transition: transform 0.8s ease-in-out;
        }

        .door-left {
            left: 0;
            transform: translateX(-100%);
            border-right: 3px solid #00d4ff;
        }

        .door-right {
            right: 0;
            transform: translateX(100%);
            border-left: 3px solid #00d4ff;
        }

        .door-transition.active .door-left {
            transform: translateX(0);
        }

        .door-transition.active .door-right {
            transform: translateX(0);
        }

        /* Menu Principal */
        .main-menu {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #0f3460 0%, #16213e 100%);
            display: none;
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }

        .main-menu.active {
            display: block;
            opacity: 1;
        }

        /* Botões superiores */
        .top-buttons {
            position: absolute;
            top: 20px;
            width: 100%;
            display: flex;
            justify-content: space-between;
            padding: 0 40px;
            z-index: 10;
        }

        .profile-btn, .tutorial-btn {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            border: 3px solid #00d4ff;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            font-size: 14px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
        }

        .profile-btn:hover, .tutorial-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 0 20px rgba(0, 212, 255, 0.6);
        }

        /* Menu central */
        .menu-center {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 212, 255, 0.1);
            border: 3px solid #00d4ff;
            border-radius: 20px;
            padding: 40px;
            backdrop-filter: blur(10px);
        }

        .menu-options {
            display: flex;
            flex-direction: column;
            gap: 20px;
            align-items: center;
        }

        .menu-btn {
            width: 250px;
            height: 60px;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            border: 2px solid #00d4ff;
            border-radius: 30px;
            color: #00d4ff;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .menu-btn:hover {
            background: linear-gradient(135deg, #00d4ff 0%, #0099cc 100%);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 212, 255, 0.4);
        }

        /* Animações */
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        @keyframes loading {
            0% { width: 0%; }
            100% { width: 100%; }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
    </style>


</head>
<body>
    <header class="header">
        <div class="container">
            <div class="logo">
                <div class="logo-icon">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="20" cy="20" r="18" stroke="url(#gradient1)" stroke-width="2" fill="rgba(59, 130, 246, 0.1)"/>
                        <path d="M14 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 2.8-1.9 5.15-4.5 5.8V26h-3v-4.2C15.9 21.15 14 18.8 14 16z" fill="url(#gradient2)"/>
                        <circle cx="20" cy="30" r="2" fill="#FACC15"/>
                        <defs>
                            <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#3B82F6"/>
                                <stop offset="100%" style="stop-color:#22D3EE"/>
                            </linearGradient>
                            <linearGradient id="gradient2" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#3B82F6"/>
                                <stop offset="100%" style="stop-color:#22D3EE"/>
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
                <span class="logo-text">Infância Conectada</span>
            </div>
            
            <nav class="nav" id="mainNav">
                <ul class="nav-list">
                    <li><a href="#home" class="nav-link">Home</a></li>
                    <li><a href="#sobre" class="nav-link">Sobre</a></li>
                    <li><a href="#projetos" class="nav-link active">Projetos</a></li>
                    <li><a href="#galeria" class="nav-link">Galeria</a></li>
                    <li><a href="#doacoes" class="nav-link">Doações</a></li>
                    <li><a href="#contato" class="nav-link">Contato</a></li>
                </ul>
            </nav>
            
            <div class="auth-section">
                <div class="login-buttons">
                    <button class="login-btn institution-btn">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM12.5 16v-1a4.5 4.5 0 0 0-9 0v1h9z"/>
                        </svg>
                        Instituição
                    </button>
                    <button class="login-btn children-btn">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5z"/>
                        </svg>
                        Crianças
                    </button>
                </div>
                
                <div class="user-menu" id="userMenu">
                    <button class="user-avatar">
                        <svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
                            <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z"/>
                        </svg>
                    </button>
                    
                    <div class="dropdown-menu" id="dropdownMenu">
                        <a href="#perfil" class="dropdown-item">
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM12.5 16v-1a4.5 4.5 0 0 0-9 0v1h9z"/>
                            </svg>
                            Meu Perfil
                        </a>
                        <a href="#configuracoes" class="dropdown-item">
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                                <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319z"/>
                            </svg>
                            Configurações
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="#sair" class="dropdown-item logout">
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z"/>
                                <path d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z"/>
                            </svg>
                            Sair
                        </a>
                    </div>
                </div>
            </div>
            
            <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Abrir menu">
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
            </button>
        </div>
        
        <div class="mobile-nav" id="mobileNav">
            <ul class="mobile-nav-list">
                <li><a href="#home" class="mobile-nav-link">Home</a></li>
                <li><a href="#quem-somos" class="mobile-nav-link">Quem Somos</a></li>
                <li><a href="#projetos" class="mobile-nav-link">Projetos</a></li>
                <li><a href="#galeria" class="mobile-nav-link">Galeria</a></li>
                <li><a href="#doacoes" class="mobile-nav-link">Doações</a></li>
                <li><a href="#contato" class="mobile-nav-link">Contato</a></li>
            </ul>
            
            <div class="mobile-auth">
                <button class="mobile-login-btn institution-btn">Instituição</button>
                <button class="mobile-login-btn children-btn">Crianças</button>
            </div>
        </div>
    </header>

    <body>
        <div class="game-container">
            <!-- Tela de Loading -->
            <div class="loading-screen" id="loadingScreen">
                <div class="loading-logo">⚔️</div>
                <div class="loading-bar">
                    <div class="loading-progress"></div>
                </div>
                <div class="loading-text">Carregando...</div>
            </div>
    
            <!-- Transição das Portas -->
            <div class="door-transition" id="doorTransition">
                <div class="door-left"></div>
                <div class="door-right"></div>
            </div>
    
            <!-- Menu Principal -->
            <div class="main-menu" id="mainMenu">
                <!-- Botões superiores -->
                <div class="top-buttons">
                    <button class="profile-btn" onclick="handleMenuClick('perfil')">
                        PERFIL
                    </button>
                    <button class="tutorial-btn" onclick="handleMenuClick('tutorial')">
                        TUTORIAL
                    </button>
                </div>
    
                <!-- Menu central -->
                <div class="menu-center">
                    <div class="menu-options">
                        <button class="menu-btn" onclick="handleMenuClick('jogar')">Jogar</button>
                        <button class="menu-btn" onclick="handleMenuClick('inventario')">Inventário</button>
                        <button class="menu-btn" onclick="handleMenuClick('amuleto')">Amuleto</button>
                        <button class="menu-btn" onclick="handleMenuClick('loja')">Loja</button>
                    </div>
                </div>
            </div>
        </div>


        <script>
            // Controle do estado do jogo
            let gameState = 'loading';
            let isTransitioning = false;
    
            // Função para mostrar transição de porta
            function showDoorTransition(callback) {
                if (isTransitioning) return;
                
                isTransitioning = true;
                const doorTransition = document.getElementById('doorTransition');
                
                // Ativar transição
                doorTransition.classList.add('active');
                
                // Aguardar fechamento completo
                setTimeout(() => {
                    if (callback) callback();
                    
                    // Aguardar 1 segundo e abrir as portas
                    setTimeout(() => {
                        doorTransition.classList.remove('active');
                        
                        // Aguardar abertura completa
                        setTimeout(() => {
                            isTransitioning = false;
                        }, 800);
                    }, 1000);
                }, 800);
            }
    
            // Função para lidar com cliques no menu
            function handleMenuClick(option) {
                console.log(`Clicou em: ${option}`);
                
                showDoorTransition(() => {
                    // Aqui você pode implementar a lógica para cada opção
                    switch(option) {
                        case 'jogar':
                            console.log('Iniciando jogo...');
                            break;
                        case 'inventario':
                            console.log('Abrindo inventário...');
                            break;
                        case 'amuleto':
                            console.log('Abrindo amuletos...');
                            break;
                        case 'loja':
                            console.log('Abrindo loja...');
                            break;
                        case 'perfil':
                            console.log('Abrindo perfil...');
                            break;
                        case 'tutorial':
                            console.log('Abrindo tutorial...');
                            break;
                    }
                });
            }
    
            // Inicialização do jogo
            window.addEventListener('load', () => {
                // Simular loading por 3 segundos
                setTimeout(() => {
                    gameState = 'menu';
                    
                    // Primeira transição de porta
                    showDoorTransition(() => {
                        // Esconder tela de loading
                        document.getElementById('loadingScreen').style.display = 'none';
                        
                        // Mostrar menu principal
                        const mainMenu = document.getElementById('mainMenu');
                        mainMenu.classList.add('active', 'fade-in');
                    });
                }, 3000);
            });
    
            // Prevenir cliques durante transições
            document.addEventListener('click', (e) => {
                if (isTransitioning) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            }, true);
        </script>



    
    <script src="/js/header-infancia.js"></script>
</body>
</html>